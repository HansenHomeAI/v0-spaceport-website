# Production SOGS Compression Container
# Uses NVIDIA CUDA runtime for GPU acceleration with real SOGS compression

FROM nvidia/cuda:12.6-devel-ubuntu22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=${CUDA_HOME}/bin:${PATH}
ENV LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    build-essential \
    cmake \
    git \
    wget \
    curl \
    libjpeg-dev \
    libpng-dev \
    libwebp-dev \
    libtiff-dev \
    libopencv-dev \
    pkg-config \
    software-properties-common \
    && rm -rf /var/lib/apt/lists/*

# Create symbolic links for python
RUN ln -sf /usr/bin/python3 /usr/bin/python
RUN ln -sf /usr/bin/pip3 /usr/bin/pip

# Upgrade pip
RUN pip install --upgrade pip setuptools wheel

# Install PyTorch with CUDA support first (critical for SOGS)
RUN pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121

# Install CuPy for GPU acceleration
RUN pip install cupy-cuda12x

# Install AWS dependencies
RUN pip install boto3 botocore awscli

# Install scientific computing libraries
RUN pip install numpy scipy pandas scikit-learn

# Install image processing libraries
RUN pip install Pillow opencv-python imageio

# Install utility libraries
RUN pip install tqdm structlog orjson pathlib2

# Install PLAS algorithm (required for SOGS)
RUN pip install git+https://github.com/nerfstudio-project/gsplat.git

# Clone and install PlayCanvas SOGS
WORKDIR /opt
RUN git clone https://github.com/playcanvas/sogs.git
WORKDIR /opt/sogs

# Install SOGS dependencies and build
RUN pip install -e .

# Verify SOGS installation
RUN python -c "import sogs; print('SOGS imported successfully')"

# Create working directory
WORKDIR /opt/ml/code

# Copy compression script
COPY compress_model_production.py /opt/ml/code/
COPY requirements_production.txt /opt/ml/code/

# Install any additional requirements
RUN pip install -r requirements_production.txt

# Set permissions
RUN chmod +x /opt/ml/code/compress_model_production.py

# Verify CUDA and PyTorch GPU availability
RUN python -c "import torch; print(f'CUDA available: {torch.cuda.is_available()}'); print(f'CUDA devices: {torch.cuda.device_count()}')"

# Verify SOGS CLI is available
RUN which sogs-compress || echo "SOGS CLI not in PATH, checking Python module..."
RUN python -c "import sogs; print('SOGS module available')"

# Set entrypoint
ENTRYPOINT ["python", "/opt/ml/code/compress_model_production.py"] 