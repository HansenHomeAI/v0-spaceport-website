# Optimized 3D Gaussian Splatting Training Container
# Based on NVIDIA PyTorch container for GPU acceleration
FROM nvcr.io/nvidia/pytorch:22.12-py3

# Prevent interactive prompts
ENV DEBIAN_FRONTEND=noninteractive

# Set NVIDIA container runtime environment
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility

# Install system dependencies for 3DGS and computer vision
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    wget \
    curl \
    unzip \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    ffmpeg \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /opt/ml

# Copy requirements and install Python dependencies
COPY requirements_optimized.txt .
RUN pip install --no-cache-dir -r requirements_optimized.txt

# Install additional PyTorch dependencies for progressive training
RUN pip install --no-cache-dir \
    pytorch-lightning>=1.8.0 \
    torchmetrics>=0.11.0 \
    timm>=0.6.0

# Copy optimized training scripts
COPY train_gaussian_optimized.py .
COPY progressive_config.yaml .
RUN chmod +x train_gaussian_optimized.py

# Create directories for model artifacts
RUN mkdir -p /opt/ml/model /opt/ml/input/data/training

# Set environment variables for optimization
ENV CUDA_VISIBLE_DEVICES=0
ENV TORCH_CUDA_ARCH_LIST="6.0 6.1 7.0 7.5 8.0 8.6"
ENV FORCE_CUDA=1

# Memory optimization settings
ENV PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:128
ENV OMP_NUM_THREADS=4

# Set entrypoint to optimized training script
ENTRYPOINT ["python3", "/opt/ml/train_gaussian_optimized.py"] 