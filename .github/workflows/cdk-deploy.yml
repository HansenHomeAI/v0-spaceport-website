name: CDK Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # for GitHub OIDC
      contents: read
    defaults:
      run:
        working-directory: infrastructure/spaceport_cdk

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install specific versions to avoid dependency resolution issues
        pip install aws-cdk-lib==2.89.0 constructs==10.3.0 boto3==1.28.0 --no-deps
        pip install pytest jsii cattrs typeguard typing-extensions publication --no-deps
        # Now install all dependencies
        pip install -e .
        npm install -g aws-cdk

    - name: Configure AWS credentials (OIDC)
      if: ${{ secrets.AWS_ROLE_TO_ASSUME != '' }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: us-west-2

    - name: Configure AWS credentials (access keys)
      if: ${{ secrets.AWS_ROLE_TO_ASSUME == '' && secrets.AWS_ACCESS_KEY_ID != '' && secrets.AWS_SECRET_ACCESS_KEY != '' }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Fail if AWS credentials are missing
      if: ${{ secrets.AWS_ROLE_TO_ASSUME == '' && (secrets.AWS_ACCESS_KEY_ID == '' || secrets.AWS_SECRET_ACCESS_KEY == '') }}
      run: |
        echo "❌ Missing AWS credentials. Set either AWS_ROLE_TO_ASSUME for OIDC or AWS_ACCESS_KEY_ID/AWS_SECRET_ACCESS_KEY secrets." >&2
        exit 1

    - name: CDK Bootstrap
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: npx cdk bootstrap aws://$(aws sts get-caller-identity --query Account --output text)/us-west-2

    - name: Deploy CDK Stack
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        # Deploy SpaceportStack with GoogleMapsApiKey parameter
        npx cdk deploy SpaceportStack --require-approval never --context account=$(aws sts get-caller-identity --query Account --output text) --context region=us-west-2 --parameters GoogleMapsApiKey=${{ secrets.GOOGLE_MAPS_API_KEY }}
        # Deploy SpaceportMLPipelineStack without parameters
        npx cdk deploy SpaceportMLPipelineStack --require-approval never --context account=$(aws sts get-caller-identity --query Account --output text) --context region=us-west-2

    - name: CDK Diff
      if: github.event_name == 'pull_request'
      run: npx cdk diff 